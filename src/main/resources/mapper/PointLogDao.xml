<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.shopec.dao.PointLogDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.shopec.entity.PointLog">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="balance" property="balance" />
        <result column="credit" property="credit" />
        <result column="debit" property="debit" />
        <result column="memo" property="memo" />
        <result column="type" property="type" />
        <association property="member" select="net.shopec.dao.MemberDao.find" column="member_id" javaType="net.shopec.entity.Member" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        pointLog.id,
        pointLog.version,
        pointLog.created_date, pointLog.last_modified_date, pointLog.balance, pointLog.credit, pointLog.debit, pointLog.memo, pointLog.type, pointLog.member_id
    </sql>
    
    <!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`point_log` pointLog
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
    <!-- 查找实体对象分页 -->
	<select id="selectPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`point_log` pointLog
		LEFT JOIN `users` member ON pointLog.`member_id` = member.`id`
		WHERE
			`dtype` = 'Member'
		<if test="ew.nonEmptyOfWhere == true">
			AND
		</if>
		${ew.sqlSegment}
	</select>
	
	<!-- 查找积分记录分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`point_log` pointLog
		WHERE 
			member_id = #{member.id}
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.shopec.entity.PointLog">
   		INSERT INTO point_log(
			id ,
			created_date ,
			version ,
			balance ,
			credit ,
			debit ,
			memo ,
			`type` ,
			member_id
		) VALUES (
			#{entity.id}, 
			#{entity.createdDate}, 
			#{entity.version}, 
			#{entity.balance}, 
			#{entity.credit}, 
			#{entity.debit}, 
			#{entity.memo}, 
			#{entity.type}, 
			#{entity.member.id}
		)
  	</insert>
  
</mapper>
