<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.igomall.dao.StoreDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.igomall.entity.Store">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="address" property="address" />
        <result column="bail_paid" property="bailPaid" />
        <result column="email" property="email" />
        <result column="end_date" property="endDate" />
        <result column="introduction" property="introduction" />
        <result column="is_enabled" property="isEnabled" />
        <result column="keyword" property="keyword" />
        <result column="logo" property="logo" />
        <result column="mobile" property="mobile" />
        <result column="name" property="name" />
        <result column="phone" property="phone" />
        <result column="status" property="status" />
        <result column="type" property="type" />
        <result column="zip_code" property="zipCode" />
       	<association property="business" select="com.igomall.dao.BusinessDao.find" column="business_id" javaType="com.igomall.entity.Business" fetchType="lazy"/>
        <association property="storeRank" select="com.igomall.dao.StoreRankDao.find" column="store_rank_id" javaType="com.igomall.entity.StoreRank" fetchType="lazy"/>
        <association property="storeCategory" select="com.igomall.dao.StoreCategoryDao.find" column="store_category_id" javaType="com.igomall.entity.StoreCategory" fetchType="lazy"/>
        <association property="aftersalesSetting" select="com.igomall.dao.AftersalesSettingDao.findByAttribute" column="{attributeName=store_id, attributeValue=id}" javaType="com.igomall.entity.AftersalesSetting" fetchType="lazy"/>
        <collection property="aftersales" select="com.igomall.dao.AftersalesDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.Aftersales" fetchType="lazy"/>
        <collection property="storeAdImages" select="com.igomall.dao.StoreAdImageDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.StoreAdImage" fetchType="lazy"/>
        <collection property="instantMessages" select="com.igomall.dao.InstantMessageDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.InstantMessage" fetchType="lazy"/>
        <collection property="storeProductCategories" select="com.igomall.dao.StoreProductCategoryDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.StoreProductCategory" fetchType="lazy"/>
        <collection property="productCategories" select="com.igomall.dao.ProductCategoryDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.ProductCategory" fetchType="lazy"/>
        <collection property="categoryApplications" select="com.igomall.dao.CategoryApplicationDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.CategoryApplication" fetchType="lazy"/>
        <collection property="storeProductTags" select="com.igomall.dao.StoreProductTagDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.StoreProductTag" fetchType="lazy"/>
        <collection property="products" select="com.igomall.dao.ProductDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.Product" fetchType="lazy"/>
        <collection property="promotions" select="com.igomall.dao.PromotionDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.Promotion" fetchType="lazy"/>
        <collection property="coupons" select="com.igomall.dao.CouponDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.Coupon" fetchType="lazy"/>
        <collection property="storePluginStatus" select="com.igomall.dao.StorePluginStatusDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.StorePluginStatus" fetchType="lazy"/>
        <collection property="orders" select="com.igomall.dao.OrderDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.Order" fetchType="lazy"/>
        <collection property="storeFavorites" select="com.igomall.dao.StoreFavoriteDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.StoreFavorite" fetchType="lazy"/>
        <collection property="deliveryTemplates" select="com.igomall.dao.DeliveryTemplateDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.DeliveryTemplate" fetchType="lazy"/>
        <collection property="deliveryCenters" select="com.igomall.dao.DeliveryCenterDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.DeliveryCenter" fetchType="lazy"/>
        <collection property="defaultFreightConfigs" select="com.igomall.dao.DefaultFreightConfigDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.DefaultFreightConfig" fetchType="lazy"/>
        <collection property="areaFreightConfigs" select="com.igomall.dao.AreaFreightConfigDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.AreaFreightConfig" fetchType="lazy"/>
        <collection property="svcs" select="com.igomall.dao.SvcDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.Svc" fetchType="lazy"/>
        <collection property="paymentTransactions" select="com.igomall.dao.PaymentTransactionDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.PaymentTransaction" fetchType="lazy"/>
        <collection property="consultations" select="com.igomall.dao.ConsultationDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.Consultation" fetchType="lazy"/>
        <collection property="reviews" select="com.igomall.dao.ReviewDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.Review" fetchType="lazy"/>
        <collection property="statistics" select="com.igomall.dao.StatisticDao.findSet" column="{attributeName=store_id, attributeValue=id}" ofType="com.igomall.entity.Statistic" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        version,
        created_date, last_modified_date, address, bail_paid, email, end_date, introduction, is_enabled, keyword, logo, mobile, name, phone, status, type, zip_code, business_id, store_category_id, store_rank_id, 'store_id'
    </sql>

	<!-- 查找实体对象 -->
	<select id="find" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`store`
		WHERE
			`id` = #{id}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`store`
		<choose>
			<when test="attributeName == 'product_category_id'">
				LEFT JOIN `product_category_store` ON id = stores_id
				WHERE
					product_categories_id = #{attributeValue}
			</when>
			<otherwise>
				WHERE
					${attributeName} = #{attributeValue}
			</otherwise>
		</choose>
	</select>
	
	<!-- 查找所有实体对象集合 -->
	<select id="findAll" resultType="com.igomall.entity.Store">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`store`
	</select>
	
	<!-- 根据属性查找实体对象 -->
	<select id="findByAttribute" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`store`
		WHERE
			${attributeName } = #{attributeValue}
	</select>
	
	<!-- 查找店铺 -->
	<select id="findList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`store`
		<where>
			<if test="type != null">
			  	AND type = #{type.ordinal}
		  	</if>
		  	<if test="status != null">
		  		AND `status` = #{status.ordinal}
		  	</if>
		  	<if test="isEnabled != null">
		  		AND is_enabled = #{isEnabled}
		  	</if>
		  	<if test="hasExpired != null">
		  		<if test="hasExpired == true">
		  			AND (end_date IS NOT NULL AND end_date <![CDATA[ <= ]]> NOW())
		  		</if>
		  		<if test="hasExpired == false">
		  			AND (end_date IS NULL OR end_date <![CDATA[ > ]]> NOW())
		  		</if>
		  	</if>
		  	<if test="first != null and count != null">
				LIMIT ${first}, ${count}
			</if>
		</where>
	</select>
			
	<!-- 判断是否存在 -->
	<select id="exists" resultType="boolean">
		SELECT
			COUNT(1)
		FROM
			`store`
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 判断是否唯一 -->
	<select id="unique" resultType="boolean">
		SELECT
			count(1)
		FROM
			`store`
		WHERE
			${attributeName } = #{attributeValue}
		<if test="id != null">
			AND id != #{id}
		</if>
	</select>
	
	<!-- 查询已付保证金总额 -->
	<select id="bailPaidTotalAmountDate" resultType="BigDecimal">
		SELECT
			IFNULL(sum(amount - fee), 0)
		FROM
			payment_transaction
		WHERE
			type = 3
			AND is_success = true
		<if test="beginDate != null">
			AND created_date <![CDATA[ >= ]]> #{beginDate}
		</if>
		<if test="endDate != null">
			AND created_date <![CDATA[ <= ]]> #{endDate}
		</if>
	</select>
	
	<!-- 查询已付保证金总额 -->
	<select id="bailPaidTotalAmount" resultType="BigDecimal">
		SELECT
			IFNULL(sum(bail_paid) , 0)
		FROM
			store
	</select>
	
	<!-- 查找店铺数量 -->
	<select id="count" resultType="long">
		SELECT
			count(1)
		FROM
			`store`
		<where>
			<if test="type != null">
			  	AND type = #{type.ordinal}
		  	</if>
		  	<if test="status != null">
		  		AND `status` = #{status.ordinal}
		  	</if>
		  	<if test="isEnabled != null">
		  		AND is_enabled = #{isEnabled}
		  	</if>
		  	<if test="hasExpired != null">
		  		<if test="hasExpired == true">
		  			AND (end_date IS NOT NULL AND end_date <![CDATA[ <= ]]> NOW())
		  		</if>
		  		<if test="hasExpired == false">
		  			AND (end_date IS NULL OR end_date <![CDATA[ > ]]> NOW())
		  		</if>
		  	</if>
		</where>
	</select>
	
	<!-- 查找店铺分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`store`
		<where>
			<if test="type != null">
			  	AND type = #{type.ordinal}
		  	</if>
		  	<if test="status != null">
		  		AND `status` = #{status.ordinal}
		  	</if>
		  	<if test="isEnabled != null">
		  		AND is_enabled = #{isEnabled}
		  	</if>
		  	<if test="hasExpired != null">
		  		<if test="hasExpired == true">
		  			AND (end_date IS NOT NULL AND end_date <![CDATA[ <= ]]> NOW())
		  		</if>
		  		<if test="hasExpired == false">
		  			AND (end_date IS NULL OR end_date <![CDATA[ > ]]> NOW())
		  		</if>
		  	</if>
		  	${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 查找经营分类 -->
	<select id="findProductCategoryList" resultType="com.igomall.entity.ProductCategory">
		SELECT
			productCategory.*
		FROM
			product_category productCategory
		INNER JOIN category_application categoryApplication ON productCategory.id = categoryApplication.product_category_id
		<where>
			<if test="store != null">
				AND categoryApplication.`store_id` = #{store.id} 
			</if>
			<if test="status != null">
				AND categoryApplication.`status` = #{status.ordinal} 
			</if>
		</where>
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="com.igomall.entity.Store">
    	INSERT INTO store(
			id ,
			created_date ,
			version ,
			address ,
			bail_paid ,
			email ,
			end_date ,
			is_enabled ,
			keyword ,
			logo ,
			mobile ,
			`name` ,
			phone ,
			`status` ,
			`type` ,
			zip_code ,
			business_id ,
			store_category_id ,
			store_rank_id ,
			introduction
		) VALUES (
			#{entity.id}, 
			#{entity.createdDate}, 
			#{entity.version}, 
			#{entity.address}, 
			#{entity.bailPaid}, 
			#{entity.email}, 
			#{entity.endDate}, 
			#{entity.isEnabled}, 
			#{entity.keyword}, 
			#{entity.logo}, 
			#{entity.mobile}, 
			#{entity.name}, 
			#{entity.phone}, 
			#{entity.status}, 
			#{entity.type}, 
			#{entity.zipCode}, 
			#{entity.business.id}, 
			#{entity.storeCategory.id}, 
			#{entity.storeRank.id}, 
			#{entity.introduction}
		)
  	</insert>
  	
  	<!-- 更新 -->
  	<update id="update" parameterType="com.igomall.entity.Store">
   		UPDATE store
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			address = #{entity.address},
			bail_paid = #{entity.bailPaid},
			email = #{entity.email},
			end_date = #{entity.endDate},
			is_enabled = #{entity.isEnabled},
			keyword = #{entity.keyword},
			logo = #{entity.logo},
			mobile = #{entity.mobile},
			`name` = #{entity.name},
			phone = #{entity.phone},
			`status` = #{entity.status},
			zip_code = #{entity.zipCode},
			business_id = #{entity.business.id},
			store_category_id = #{entity.storeCategory.id},
			store_rank_id = #{entity.storeRank.id},
			introduction = #{entity.introduction}
		WHERE
			id = #{entity.id}
		AND version = #{entity.version}
  	</update>
  
</mapper>
